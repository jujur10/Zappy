variables:
  PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  BUILD_TYPE: Release # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
  BINARY_NAME: EXECUTABLE_NAME

stages:
  - build
  - test
  - deploy


build_native:
  stage: build
  only:
    - merge_requests
    - master
    - main
    - develop
    - dev
  tags:
    - ubuntu
    - build
  script:
    - echo "Building"
    - cmake -B build -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" .
    - cmake --build build --config "${BUILD_TYPE}" -j

build_sonarqube_wrapper:
  stage: build
  only:
    - merge_requests
    - master
    - main
    - develop
    - dev
  script:
    - cmake -B build -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" .
    # run the build inside the build wrapper
    - ~/build-wrapper/build-wrapper-linux-x86-64 --out-dir "${BUILD_WRAPPER_OUT_DIR}" cmake --build build --config "${BUILD_TYPE}" -j
  artifacts:
    paths:
      - "build/"
  cache:
    policy: pull-push
    key: "${CI_COMMIT_SHORT_SHA}"
    paths:
      - "${BUILD_WRAPPER_OUT_DIR}"
  tags:
    - ubuntu
    - build
    - SAST

sonarqube-check:
  stage: test
  cache:
    policy: pull
    key: "${CI_COMMIT_SHORT_SHA}"
    paths:
      - "${BUILD_WRAPPER_OUT_DIR}"
  script:
    - pwd
    - ls -lR
    - ~/sonar-scanner/bin/sonar-scanner --define sonar.host.url="${SONAR_HOST_URL}" --define sonar.cfamily.build-wrapper-output="${BUILD_WRAPPER_OUT_DIR}"
  only:
    - merge_requests
    - master
    - main
    - develop
    - dev
  needs:
    - build_sonarqube_wrapper
  tags:
    - ubuntu
    - SAST

sonarqube-vulnerability-report:
  stage: test
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=${PROJECT_KEY}&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - dev
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check
  tags:
    - ubuntu
    - SAST

deploy-to-package-registry-main:
  stage: deploy
  allow_failure: false
  script:
    - cmake -B build -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DBUILD_PACKAGE=1 .
    - cmake --build build --config "${BUILD_TYPE}" -j
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_ai "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/1.0.0/zappy_ai"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_server "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/1.0.0/zappy_server"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_gui "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/1.0.0/zappy_gui"'
  needs:
    - build_sonarqube_wrapper
  only:
    - master
    - main
  tags:
    - ubuntu

deploy-to-package-registry-dev:
  stage: deploy
  allow_failure: false
  script:
    - cmake -B build -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DBUILD_PACKAGE=1 .
    - cmake --build build --config "${BUILD_TYPE}" -j
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_ai "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/0.1.0/zappy_ai"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_server "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/0.1.0/zappy_server"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_gui "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/0.1.0/zappy_gui"'
  needs:
    - build_sonarqube_wrapper
  only:
    - dev
    - develop
  tags:
    - ubuntu

deploy-to-package-registry-mr:
  stage: deploy
  allow_failure: false
  script:
    - cmake -B build -DCMAKE_BUILD_TYPE="${BUILD_TYPE}" -DBUILD_PACKAGE=1 .
    - cmake --build build --config "${BUILD_TYPE}" -j
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_ai "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/0.0.1/zappy_ai"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_server "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/0.0.1/zappy_server"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/zappy_gui "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/zappy/0.0.1/zappy_gui"'
  needs:
    - build_sonarqube_wrapper
  only:
    - merge_requests
  tags:
    - ubuntu

